package core

import (
	"bufio"
	"fmt"
	"os"
	"strings"
)

// BootstrapBlock ‚Äî –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–ø—Ä–æ—Å–Ω–æ–≥–æ –±–ª–æ–∫–∞
type BootstrapBlock interface {
	ID() string
	Prompt() string
	Tags() []string
	Run(input string, mem *MemoryEngine, dict *SignalDictionary)
}

// GoalBlock ‚Äî —Ü–µ–ª—å –∂–∏–∑–Ω–∏
type GoalBlock struct{}
func (b GoalBlock) ID() string         { return "q_mission" }
func (b GoalBlock) Prompt() string     { return "–ö–∞–∫–∞—è —Ç–≤–æ—è –≥–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å –≤ –∂–∏–∑–Ω–∏?" }
func (b GoalBlock) Tags() []string     { return []string{"goal", "mission"} }
func (b GoalBlock) Run(input string, mem *MemoryEngine, dict *SignalDictionary) {
	q := mem.CreateQBit(input)
	q.Tags = b.Tags()
	dict.Add(b.ID(), input, b.Tags(), []string{input})
}

// InterestBlock ‚Äî –∏–Ω—Ç–µ—Ä–µ—Å—ã
type InterestBlock struct{}
func (b InterestBlock) ID() string     { return "q_interest" }
func (b InterestBlock) Prompt() string { return "–ö–∞–∫–∏–µ —Ç–µ–º—ã —Ç–µ–±–µ –Ω–∞–∏–±–æ–ª–µ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã?" }
func (b InterestBlock) Tags() []string { return []string{"interest"} }
func (b InterestBlock) Run(input string, mem *MemoryEngine, dict *SignalDictionary) {
	q := mem.CreateQBit(input)
	q.Tags = b.Tags()
	dict.Add(b.ID(), input, b.Tags(), []string{input})
}

// HelpBlock ‚Äî –∫–∞–∫ –ø–æ–º–æ—á—å
type HelpBlock struct{}
func (b HelpBlock) ID() string         { return "q_help" }
func (b HelpBlock) Prompt() string     { return "–ö–∞–∫ —Ç—ã —Ö–æ—á–µ—à—å, —á—Ç–æ–±—ã ARA –ø–æ–º–æ–≥–∞–ª–∞ —Ç–µ–±–µ?" }
func (b HelpBlock) Tags() []string     { return []string{"function", "support"} }
func (b HelpBlock) Run(input string, mem *MemoryEngine, dict *SignalDictionary) {
	q := mem.CreateQBit(input)
	q.Tags = b.Tags()
	dict.Add(b.ID(), input, b.Tags(), []string{input})
}

// RoleBlock ‚Äî –∫—Ç–æ —Ç—ã
type RoleBlock struct{}
func (b RoleBlock) ID() string         { return "q_role" }
func (b RoleBlock) Prompt() string     { return "–ö—Ç–æ —Ç—ã –ø–æ –∂–∏–∑–Ω–∏? (—É—á—ë–Ω—ã–π, –∏–Ω–∂–µ–Ω–µ—Ä, —Ñ–∏–ª–æ—Å–æ—Ñ...)" }
func (b RoleBlock) Tags() []string     { return []string{"profile", "role"} }
func (b RoleBlock) Run(input string, mem *MemoryEngine, dict *SignalDictionary) {
	q := mem.CreateQBit(input)
	q.Tags = b.Tags()
	dict.Add(b.ID(), input, b.Tags(), []string{input})
}

// RunBootstrap ‚Äî –∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö Bootstrap-–±–ª–æ–∫–æ–≤
func RunBootstrap(mem *MemoryEngine, dict *SignalDictionary) {
	blocks := []BootstrapBlock{
		GoalBlock{}, InterestBlock{}, HelpBlock{}, RoleBlock{},
	}
	fmt.Println("üß¨ [ARA Bootstrap] –ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ª–∏—á–Ω–æ—Å—Ç–∏...")

	reader := bufio.NewReader(os.Stdin)

	for _, b := range blocks {
		fmt.Println("üß†", b.Prompt())
		fmt.Print("‚Üí ")
		input, _ := reader.ReadString('\n')
		input = strings.TrimSpace(input)
		if input != "" {
			b.Run(input, mem, dict)
		}
	}

	fmt.Println("‚úÖ [Bootstrap] –ë–∞–∑–æ–≤—ã–µ —Ü–µ–ª–∏ –∏ –ø—Ä–æ—Ñ–∏–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")
}
