package core

import (
	"strings"
)

type StandardBlock struct {
	ID       string
	Keywords []string
	Priority float64
}

// üìö –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —ç—Ç–∞–ª–æ–Ω–Ω—ã–µ –±–ª–æ–∫–∏ –º–∏—Å—Å–∏–π ARA
var StandardLibrary = []StandardBlock{
	{
		ID:       "mission_abundance",
		Keywords: []string{"–∏–∑–æ–±–∏–ª–∏–µ", "–ª—é–¥—è–º", "–ø–æ–º–æ—â—å", "—Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º", "–æ–±–ª–µ–≥—á–∏—Ç—å –∂–∏–∑–Ω—å"},
		Priority: 1.0,
	},
	{
		ID:       "mission_learning",
		Keywords: []string{"–æ–±—É—á–µ–Ω–∏–µ", "–∑–Ω–∞–Ω–∏—è", "—Ä–∞–∑–≤–∏—Ç–∏–µ", "–ø–æ–Ω–∏–º–∞–Ω–∏–µ", "–æ–±—ä—è—Å–Ω–µ–Ω–∏–µ"},
		Priority: 0.9,
	},
	{
		ID:       "mission_sync",
		Keywords: []string{"—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è", "–æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ", "p2p", "–æ–±–º–µ–Ω"},
		Priority: 0.8,
	},
}

// üîç MatchWithStandards –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–µ–∫—Å—Ç –∫–∞–∫–æ–º—É-–ª–∏–±–æ —ç—Ç–∞–ª–æ–Ω–Ω–æ–º—É –±–ª–æ–∫—É
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: ID –±–ª–æ–∫–∞, –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≤–ø–∞–≤—à–∏—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
func MatchWithStandards(content string) (string, float64, int) {
	content = strings.ToLower(content)
	bestMatch := ""
	bestScore := 0
	bestPriority := 0.0

	for _, std := range StandardLibrary {
		matchCount := 0
		for _, keyword := range std.Keywords {
			if strings.Contains(content, strings.ToLower(strings.TrimSpace(keyword))) {
				matchCount++
			}
		}
		if matchCount > bestScore {
			bestScore = matchCount
			bestMatch = std.ID
			bestPriority = std.Priority
		}
	}

	if bestScore >= 3 {
		return bestMatch, bestPriority, bestScore
	}
	return "", 0.0, 0
}

// üß± GetStandardByID –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç—Ç–∞–ª–æ–Ω–Ω—ã–π –±–ª–æ–∫ –ø–æ ID
func GetStandardByID(id string) *StandardBlock {
	for _, std := range StandardLibrary {
		if std.ID == id {
			return &std
		}
	}
	return nil
}
