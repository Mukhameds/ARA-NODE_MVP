package internal

import (
	"fmt"
	"ara-node/core"
)

// PrintPhantomTree ‚Äî –≤—ã–≤–æ–¥–∏—Ç –¥–µ—Ä–µ–≤–æ —Ñ–∞–Ω—Ç–æ–º–æ–≤
func PrintPhantomTree(mem *core.MemoryEngine) {
	if len(mem.PhantomTree) == 0 {
		fmt.Println("[PhantomTree] ‚ö†Ô∏è –ù–µ—Ç —Ñ–∞–Ω—Ç–æ–º–æ–≤ –≤ –∂—É—Ä–Ω–∞–ª–µ.")
		return
	}

	fmt.Println("üå± [PhantomTree] –î–µ—Ä–µ–≤–æ —Ñ–∞–Ω—Ç–æ–º–æ–≤:")
	for _, p := range mem.PhantomTree {
		fmt.Printf("üîÆ %s\n", p.PhantomID)
		for _, src := range p.SourceIDs {
			if q, ok := mem.QBits[src]; ok {
				fmt.Printf("   ‚Ü™ %s | %s\n", src, q.Content)
			} else {
				fmt.Printf("   ‚Ü™ %s | [not found]\n", src)
			}
		}
	}
}
